#!/bin/sh

# if repos file existed, read it, which contains all repos will be operated
if [ -f repos ]; then
  . repos
else
  REPOS=( origin )
fi

# die
die (){
  s=$1 #status code
  shift
  echo >&2 "\033[41m$*\033[0m"
  exit "$s"
}

# run
run (){
  len=${#REPOS[*]}
  i=0
  while [ $i -lt $len ]; do
    cmd=$(basename $1 | sed -e "s/{}/${REPOS[$i]}/g")
    echo $cmd
    $cmd
    i=$((i+1))
  done
}

git-update-server-info

emptyrev="0000000000000000000000000000000000000000"

color_start="\033[45m"
color_end="\033[0m"

# Parse parameter, git will send oldrev, newrev, refname value
if ! [ -t 0 ]; then
  read -a ref
fi

oldrev=${ref[0]}
newrev=${ref[1]}
refname=${ref[2]}

#echo "oldrev = $oldrev"
#echo "newrev = $newrev"
#echo "refname = $refname"

echo -e "$color_start--------------------------------------------------$color_end"
echo -e "$color_start--- post-receive hook triggered,               ---$color_end"
echo -e "$color_start--------------------------------------------------$color_end"
echo ""

## Start
case "$refname" in
  refs/tags/*)
    echo -e "$color_start>>> Pushing tags to [$upstream_name]$color_end"
    run "git push {} --tags"
    echo -e "$color_start>>>all done<<<$color_end"
    exit 0
    ;;
  refs/heads/*)
    IFS='/' read -ra REFNAME <<< "${ref[2]}"
    branch="${REFNAME[2]}"
    if [ "master" == "$branch" ]; then
      echo -e "$color_start*(MASTER)$color_end"
    fi

    if [ "$emptyrev" == "$newrev" ]; then # deleting branch
      if [ "master" == "$branch" ]; then  # don't delete master branch
        die 1 "$color_start[EE] You can not delete master branch$color_end"
      fi
      #can delete other branches
      echo -e "$color_start>>> Deleting branch($branch) to [$upstream_name]$color_end"
      run "git push {} :$branch"
      echo -e "$color_start>>>all done<<<$color_end"
      exit 0
    fi

    # creating new branch
    if [ "$emptyrev" == "$oldrev" ]; then
      echo -e "$color_start>>>Creating new branch [$branch]$color_end"
    fi

    # pushing updates
    echo -e "$color_start>>> Pushing branch($branch) to [$upstream_name]$color_end"
    run "git push {} $branch"
    echo -e "$color_start>>>all done<<<$color_end"
    exit 0
    ;;
  *)
    die 1 "*** Unknown type of update to $refname"
    ;;
esac
